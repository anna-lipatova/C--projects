Press ENTER to run without debug prints,
Press D1 + ENTER to enable some debug prints,
Press D2 + ENTER to enable all debug prints: 
Assignment 1: All persons, that consider no one as their friend.
Main: foreach:
Main: got Person(Name = "Hubert", Age = 10)
Main: got Person(Name = "Anna", Age = 22)

alternative solution for Assignment 1:
Main: foreach:
Main: got Person(Name = "Hubert", Age = 10)
Main: got Person(Name = "Anna", Age = 22)

Assignment 2: All persons, sorted alphabeticaly by name, older than 15, and only those whose name starts with letter D or higher.
Main: foreach:
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)

alternative solution for Assignment 2:
Main: foreach:
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)

Assignment 3: All persons, that are oldest in whole group and whose name starts with letter T or higher (U, V, W, X, Y, Z).
Main: foreach:
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)

alternative solution for Assignment 3:
Main: foreach:
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)

alternative solution for Assignment 3:
Main: query creation:
Main: foreach:
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)

Assignment 4: All persons, that are older than everyone who they consider as their friend.
Main: foreach:
Main: got Person(Name = "Hubert", Age = 10)
Main: got Person(Name = "Anna", Age = 22)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)
Main: got Person(Name = "Cyril", Age = 21)

Assignment 5: All persons, that have no friends (they don't consider anyone as their frend and nobody considers them as their friend).
Main: foreach:
Main: got Person(Name = "Hubert", Age = 10)

Assignment 6: All persons, that are someone's oldest friend (with repeats).
Main: foreach:
Main: got Person(Name = "Anna", Age = 22)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)
Main: got Person(Name = "Blazena", Age = 18)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Frantisek", Age = 15)

Assignment 6B: All persons, that are someone's oldest friend (without repeats).
Main: foreach:
Main: got Person(Name = "Anna", Age = 22)
Main: got Person(Name = "Ursula", Age = 22)
Main: got Person(Name = "Vendula", Age = 22)
Main: got Person(Name = "Blazena", Age = 18)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Frantisek", Age = 15)

Assignment 7: All persons, who are oldest among someone's friends, but only those who are younger than that specific someone (with repeats).
Main: foreach:
Main: got Person(Name = "Blazena", Age = 18)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Daniela", Age = 18)

Assignment 7: All persons, who are oldest among someone's friends, but only those who are younger than that specific someone (without repeats).
Main: foreach:
Main: got Person(Name = "Blazena", Age = 18)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)

alternative solution for Assignment 7B:
Main: foreach:
Main: got Person(Name = "Blazena", Age = 18)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Emil", Age = 21)

Assignment 7C: All persons, who are oldest among someone's friends, but only those who are younger than that specific someone (without repeats and sorted alphabeticaly in reverse by name ).
Main: foreach:
Main: got Person(Name = "Emil", Age = 21)
Main: got Person(Name = "Daniela", Age = 18)
Main: got Person(Name = "Blazena", Age = 18)
